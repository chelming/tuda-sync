name: Build and Publish Docker Image

# Security-enhanced Docker build workflow:
# 1. Builds a single-platform image first for fast security scanning
# 2. Tags the image locally for Trivy scanning
# 3. Only pushes multi-platform images after security scan passes
# 4. Avoids SHA tag format issues with Trivy scanning

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]  # Matches both semantic and date-based versions like v2025.09.28
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for proper versioning

      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/tuda-sync
          tags: |
            # For date-based releases: v2025.09.28 -> 2025.09.28 tag
            type=semver,pattern={{version}}
            # For date-based releases: v2025.09.28 -> 2025.09 tag (works for both semantic and date-based)
            type=semver,pattern={{major}}.{{minor}}
            # For all releases: latest tag
            type=ref,event=tag,pattern=v.*,prefix=,suffix=,value=latest
            # For main branch: nightly tag instead of latest
            type=raw,value=nightly,enable={{is_default_branch}}
            # Always tag with branch name
            type=ref,event=branch
            # Tag PRs with PR number
            type=ref,event=pr
            # Always include git SHA
            type=sha,format=long

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build a local image for scanning first (always single platform)
      - name: Build Docker image for local scanning
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false  # Never push this image, it's only for local scanning
          # Build single-platform for faster scanning
          platforms: linux/amd64
          load: true  # Always load into Docker daemon
          # Use specific local tag for scanning to avoid digest references
          tags: ghcr.io/${{ github.repository_owner }}/tuda-sync:local-scan
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Export directly to Docker daemon
          outputs: type=docker
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}

      # Show Docker images for debugging
      - name: List available Docker images
        run: |
          echo "Available Docker images for scanning:"
          docker images
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/tuda-sync:local-scan
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '5m'
          # Removed skip-version-check: true as it's no longer supported
      
      # Push multi-platform images only after security scan passes
      - name: Push multi-platform images
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          # Standard registry output format for multi-platform
          outputs: type=image,name=ghcr.io/${{ github.repository_owner }}/tuda-sync
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}

      # Diagnostic step to verify image was pushed correctly (only for non-PR builds)
      - name: Verify image push
        if: github.event_name != 'pull_request'
        run: |
          echo "Verifying image tags were pushed correctly..."
          
          # Extract first tag for verification
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -1)
          echo "Checking tag: $FIRST_TAG"
          
          # Print information about the image (this will fail if image doesn't exist)
          docker buildx imagetools inspect $FIRST_TAG || echo "Note: Image may not be available locally after push"

      - name: Add summary
        run: |
          echo "## Container Image" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully built: ghcr.io/${{ github.repository_owner }}/tuda-sync" >> $GITHUB_STEP_SUMMARY
          echo "✅ Security scan completed with Trivy" >> $GITHUB_STEP_SUMMARY
          echo "Size: ~12MB (optimized with UPX compression)" >> $GITHUB_STEP_SUMMARY
          echo "Platforms: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "Tags: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Security" >> $GITHUB_STEP_SUMMARY
          echo "- Trivy security scan completed on single-platform image" >> $GITHUB_STEP_SUMMARY
          echo "- Security configuration available in SECURITY.md and .gosec.config" >> $GITHUB_STEP_SUMMARY